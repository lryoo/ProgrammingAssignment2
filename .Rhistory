submit()
source('/var/folders/z9/k36_tx895kd99y7f0z1dhb7w0000gn/T//Rtmpx6UyFa/bin_op.R')
submit()
source('/var/folders/z9/k36_tx895kd99y7f0z1dhb7w0000gn/T//Rtmpx6UyFa/bin_op.R')
submit()
source('/var/folders/z9/k36_tx895kd99y7f0z1dhb7w0000gn/T//Rtmpx6UyFa/bin_op.R')
source('/var/folders/z9/k36_tx895kd99y7f0z1dhb7w0000gn/T//Rtmpx6UyFa/bin_op.R')
submit()
source('/var/folders/z9/k36_tx895kd99y7f0z1dhb7w0000gn/T//Rtmpx6UyFa/bin_op.R')
submit()
"I" %p% "Love" %p% "R!"
"I" %p% "love" %p% "R!"
swirl()
d1 <- Sys.Date()
class()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.times())
t2 <- as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t2 <- strptime("October 17, 1986 08:24")
t2 <- strptime(October 17, 1986 08:24)
t3 <- strptime("October 17, 1986 08:24")
t3 <- strptime(October 17, 1986 08:24)
t3 <- strptime(October 17, 1986 08:24)
t3 <- strptime(October 17, 1986)
t3 <- strptime("October 17, 1986)
t3 <- strptime("October 17, 1986)
t3 <- strptime("October 17, 1986")
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
"Sys.time() - t1"
Sys.time() - t1
difftime(Sys.time(), t1, units = "days")
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head()
head(plants)
head(plants)
head(plants, 10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
quit
0
exit
exit()
quit
getwd()
ls
library(swirl)
swirl()
?file.show
?list.files
getwd()
?directory
?full.names
?full
quit
swirl()
Sys.date()
Sys.date()
Sys.Date()
mean(c(2,5,5))
mean(c(2,4,5))
quit
library(swirl)
swirl()
ls()
x <-9
quit
quit
exit
quit(swirl)
library()
swirl()
library(swirl)
swirl()
ls()
list.files()
list.files
?list.files
swirl()
library(swirl)
swirl()
exit
quit
quit(swirl)
no
exit
library(swirl)
swirl()
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <-lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flags_colors, sum)
lapply(flag_colors, sum)
sapplyl(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <-flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(flag_mat)
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flag_data, unique)
unique_vals <- lapply(flags, unique)
print(unique_vals)
length(unique_vals)
sapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
source('~/cachematrix.R')
myMatrix <- makeCacheMatrix(1:4, 2, 2)
myMatrix <- makeCacheMatrix(matrix(1:4, 2, 2))
myMatrix <- makeCacheMatrix(matrix(1:4, 2, 2))
source('~/cachematrix.R')
myMatrix <- makeCacheMatrix(matrix(1:4, 2, 2))
source('~/cachematrix.R')
myMatrix <- makeCacheMatrix(matrix(1:4, 2, 2))
my_Matrix$get
my_Matrix$get()
myMatrix$get()
myMatrix$getInverse
myMatrix$getInverse()
cacheSolve(myMatrix)
cacheSolve(myMatrix)
myMatrix
myMatrix()
source('~/cachematrix.R')
cacheSolve(myMatrix)
source('~/cachematrix.R')
cacheSolve(myMatrix)
source('~/cachematrix.R')
cacheSolve(myMatrix)
source('~/cachematrix.R')
cacheSolve(myMatrix)
source('~/cachematrix.R')
cacheSolve(myMatrix)
swirl()
sapply(flags,unique)
ok()
sapply(flags,class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flag$population, flags$red, summary)
tapply(flags$population, flags$red, summary)
tapply(flags$population, summary)
tapply(flags$landmass, flags$population, summary)
tapply(flags$population, flags$landmass, summary)
?sample()
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
simple(1:20, 10)
simple(1:20, 10, replace)
simple(1:20, 10, replace=TRUE)
sample(1:20, 10)
sample(LETTERS)
LETTERS
sample(LETTERS)
simple(1:20, 100, c(0.3, 0.7))
sample(1:20, 100, c(0.3, 0.7))
sample.int(1, 100, replace, c(0.3, 0.7))
sample.int(1, 100, replace, 0.3, 0.7)
sample.int(1:2, 100, replace, 0.3, 0.7)
sample.int(c(0,1),100, replace=TRUE, prob(c(0.3,0.7))
exit
sample.int(c(0,1),100, replace=TRUE, prob(c(0.3,0.7))
exit
sample.int(c(0,1),100, replace=TRUE, prob=(c(0.3,0.7))
exit
sample(c(0,1),100, replace=TRUE, prob=(c(0.3,0.7))
exit
sample(c(0,1), 100, replace = TRUE, prob=(c(0.3,0.7))
exit
library(swirl)
swirl()
sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10, mean=0, sd=1)
rnorm(10, mean=100, sd=25)
?rpois
rpois(5, lambda = 10)
my_pois <- replicate(100, rpois(5,10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
swirl()
library(swirl)
swirl()
5+7
library(swirl)
swirl()
?data
data()
data(cars)
?help
help(cars)
head(cars)
plot(cars)
?plot
plot(x = spped, y = dist)
plot(x = speed, y = dist)
plot(x = speed, y = dist, b)
plot(data)
plot(cars)
plot(x=cars$speed, y = cars$dist)
plot(x = cars$dist, y=cars$speed)
plot(x = Speed, y=cars$speed)
plot(x = Speed, y=cars$dist)
plot(x = cars$Speed, y=cars$dist)
xy.coords(cars$speed, cars$dist, Speed, cars$speed)
xy.coords(x = cars$speed, y = cars$dist, xlabel = Speed, ylabel = cars$speed)
xy.coords(x = cars$speed, y = cars$dist, xlabel = Speed)
xy.coords(x = cars$speed, y = cars$dist)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(cars)
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
?plot
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance", main = "My Plot")
plot(cars, main = "My Plot")
?plot
plot(cars, sub ="My Plot Subtitle")
?par
par(col = 2)
plot(cars, col=2)
plot(cars, xlim=c(10,15))
plot(cars, pch = 2)
load(data.frame(mtcars))
data.frame(mtcars)
data(mtcars)
?boxplot
boxplot(data = mtcars, formula = mpg ~ cyl)
boxplot(x, data = mtcars, formula = mpg ~ cyl)
play()
data(boxplot)
data(mtcars)
nxt()
boxplot(formulat = mpg ~ cyl, data = mtcars)
boxplot.formula(formula = mpg ~ cyl, data = mtcars)
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
noise <- function(n, mean, sd){
rnorm(n, mean, sd)
}
mapply(noise, 1:5, 1:5, 2)
noise <- function(100, 2, 1)
noise <- function(n, mean, sd){
rnorm(n, mean, sd)
}
mapply(noise, 1:5, 1:5, 2)
library(datasets)
data(iris)
?iris
head(iris)
?lapply
lapply(iris, mean, "Sepal.Length", "virginica")
lapply(x, mean, iris$Sepal.Length, "virginica", !is.na(x) = TRUE)
iris$Sepal.Length
iris
virLength <- iris$Sepal.Length
virLength
dataSource <- data("iris")
dataSource
dataSource <- data(iris)
dataSource
dataSource <-list.files(iris)
dataSource <-iris
dataSource
virmean <- function(species){
dataSource <- iris
values <- c(iris$Sepal.Length[species])
mean(values, na.rm = TRUE)
}
virmean("virginica")
virmean(virginica)
virmean("virginica")
dataSource <- iris
values <- iris$Sepal.Length[species]
virmean <- function(species){
dataSource <- iris
values <- iris$Sepal.Length[species]
mean(values, na.rm = TRUE)
}
virmean("virginica")
dataSource
iris$Sepal.Length["virginica"]
?read.csv
virmean <- function(species){
dataSource <- read.csv(iris)
values <- iris$Sepal.Length[species]
mean(values, na.rm = TRUE)
}
virmean("virginica")
dataSource<-read.csv(iris)
iris
mapply(iris$Sepal.Length, "virginica", mean)
value <- data(iris$Sepal.Length)
?data
data.frame(iris$Sepal.Length)
value <- data.frame(iris$Sepal.Length)
value
value <- data.frame(iris$Sepal.Length[virginica])
value <- data.frame(iris$Sepal.Length["virginica""])
esxits
exit
se
nxt()
data <-iris
data
values <- c(iris$Sepal.Length, virginica)
values <- c(iris$Sepal.Length, Species == "virginica"")
values <- c(iris$Sepal.Length, Species = "virginica"")
values
values <- list(iris$Sepal.Length, Species = "virginica"")
?list
list(iris$Sepal.Length)
virvalue <-list(iris$Sepal.Length, Species = "virginica")
virvalue
virvalue <-list(iris$Sepal.Length[virginica])
virvalue <-list(iris$Sepal.Length[[virginica]])
?mapply
?lapply
lengthvalue <-list(iris$Sepal.Length)
lengthvalue
virvalue <- function(Species){
lengthvalue <-list(iris$Sepal.Length)
virvalue <- lengthvalue[[Species]]
mean(virvalue)
}
virvalue("virginica")
lengthvalue <-list(iris$Sepal.Length)
lengthvalue
lengthvalue <-list(iris$Sepal.Length)
lengthvalue
?numeric
virvalue <- function(Species){
lengthvalue <-list(iris$Sepal.Length)
virvalue <- numeric(lengthvalue[[Species]])
mean(virvalue)
}
virmean <- function(Species){
lengthvalue <-list(iris$Sepal.Length)
virvalue <- numeric(lengthvalue[[Species]])
mean(virvalue)
}
virmean("virginica")
lengthvalue
virvalue
numeric(lengthvalue[[virginica]])
numeric(lengthvalue, "virginica")
numeric(lengthvalue, Species = "virginica")
numeric(lengthvalue, Species == "virginica")
lengthvalue(Species == "virginica")
lengthvalue
lengthvalue <-data.frame(iris$Sepal.Length)
lengthvalue
iris
apply(iris, Species = "virginica", mean)
?apply
apply(iris, 3, mean)
iris
apply("iris", 3, mean)
apply(x, 3, mean)
x <- iris
apply(x, 3, mean)
data(iris)
x <- data(iris)
x
x <-data.frame(iris)
x
virdata <- data.frame(iris)
virdata
?mean
virdata <- data.frame(iris)
virdata
virmean <- function(Species){
virdata <- data.frame(iris)
if (Species == "virginica"){
virvalue <- virdata$Petal.Length[[virginica]]
}
mean(virvalue, na.rm = TRUE)
}
virmean("virginica")
virmean(virginica)
virmean <- function(Species){
virdata <- data.frame(iris)
if (Species = "virginica"){
virvalue <- virdata$Petal.Length[[virginica]]
}
mean(virvalue, na.rm = TRUE)
}
virvalue
virdata
virvalue <- virdata$Petal.Length[[virginica]]
virmean <- function(Species){
virdata <- data.frame(iris)
if (Species = "virginica"){
virvalue <- virdata$Petal.Length[[Species]]
}
mean(virvalue, na.rm = TRUE)
}
MyList <- list(A,B,C)
virdata <- subset(iris, Species == "virginica", select = Sepal.Length)
virdata
virdata <- subset(iris, Species == "virginica", select = Sepal.Length)
mean(virdata)
mean(virdata)
mean(numeric(virdata))
numeric(virdata)
virdata
apply(virdata, mean)
lapply(virdata, mean)
iris
virdata <- subset(iris, Species == "virginica", select = Sepal.Length)
lapply(virdata, mean)
lapply(iris$Sepal.Length, mean)
?mapply
?sapply
apply(iris, 2, mean)
iris
colMeans(iris)
apply(iris, 2, mean)
datairis <- data.frame(iris)
apply(datairis, 2, mean)
datairis <- data.frame(iris)
datairis
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
mtcars
?tapply
tapply(mtcars$cyl, mtcars$mpg, mean)
apply(mtcars, 2, mean)
mean(mtcars$mpg, mtcars$cyl, mean)
?mean
mean(mtcars$mpg, mtcars$cyl)
tapply(mtcars$mpg, mtcars$cyl, mean)
?tapply
lapply(mtcars, mean)
sapply(mtcars, cyl, mean)
sapply(mtcars, cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
split(mtcars, mtcars$cyl)
with(mtcars, tapply(mpg, cyl, mean))
debug(ls)
ls
debug(ls)
ls
?ls
debug(ls)
getwd()
setwd("R")
getwd()
setwd ("ProgrammingAssignment2")
getwd()
source('~/R/ProgrammingAssignment2/cachematrix.R')
source('~/R/ProgrammingAssignment2/cachematrix.R')
source('~/R/ProgrammingAssignment2/cachematrix.R')
